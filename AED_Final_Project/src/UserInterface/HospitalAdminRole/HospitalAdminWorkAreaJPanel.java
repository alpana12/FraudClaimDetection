/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Hospital.TreatmentHistory;
import Business.Network.Network;
import Business.Organization.HospitalAdminOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.ApprovalRequest;
import Business.WorkQueue.ClaimApprovalRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class HospitalAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminWorkAreaJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    EcoSystem ecoSystem;

    public HospitalAdminWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise , EcoSystem ecoSystem) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecoSystem = ecoSystem;
        populateTable();
    }
    
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)hospitalRequestsJTable.getModel();
         model.setRowCount(0);
         for(Network network : ecoSystem.getNetworkList())
         {
             for (Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList())
             {
                  if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital){
                      for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()) {
                          if(request instanceof ApprovalRequest){
                    request.setMessage("Vital Signs");
                    ApprovalRequest req = (ApprovalRequest)request;
                    Object[] row = new Object[3];
                    row[0] = request;
                    row[1] = req.getCustomerName();
                    row[2] = request.getRequestDate();
                    model.addRow(row);
                          }
                          else if(request instanceof ClaimApprovalRequest)
                                  {
                                      request.setMessage("Treatment Details");
                    ClaimApprovalRequest req = (ClaimApprovalRequest)request;
                    Object[] row = new Object[3];
                    row[0] = request;
                    row[1] = req.getCustomerName();
                    row[2] = request.getRequestDate();
                    model.addRow(row);
                                  }
                  }
                 }    
             }
         }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hospitalAdminWorkAreaJLabel = new javax.swing.JLabel();
        addVitalSignsJButton = new javax.swing.JButton();
        addTreatmentJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalRequestsJTable = new javax.swing.JTable();

        hospitalAdminWorkAreaJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        hospitalAdminWorkAreaJLabel.setText("Hospital Admin Work Area");

        addVitalSignsJButton.setText("Add Vital Signs");
        addVitalSignsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVitalSignsJButtonActionPerformed(evt);
            }
        });

        addTreatmentJButton.setText("Add Treatment Details");
        addTreatmentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTreatmentJButtonActionPerformed(evt);
            }
        });

        hospitalRequestsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Customer Name", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalRequestsJTable);
        if (hospitalRequestsJTable.getColumnModel().getColumnCount() > 0) {
            hospitalRequestsJTable.getColumnModel().getColumn(0).setResizable(false);
            hospitalRequestsJTable.getColumnModel().getColumn(1).setResizable(false);
            hospitalRequestsJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(315, 315, 315)
                .addComponent(hospitalAdminWorkAreaJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(343, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addVitalSignsJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addTreatmentJButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(hospitalAdminWorkAreaJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVitalSignsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTreatmentJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(280, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addVitalSignsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVitalSignsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedrow = hospitalRequestsJTable.getSelectedRow();
        if (selectedrow >= 0)
        {
         ApprovalRequest request1 = (ApprovalRequest)hospitalRequestsJTable.getValueAt(selectedrow, 0);
            //HospitalAdminWorkAreaJPanel hospitalAdminWorkAreaJPanel = new HospitalAdminWorkAreaJPanel(userProcessContainer, enterprise,request1);
            //userProcessContainer.add("hospitalAdminWorkAreaJPanel", hospitalAdminWorkAreaJPanel);
            //CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            //layout.next(userProcessContainer);
        
        AddVitalSignsJPanel addVitalSignsJPanel = new AddVitalSignsJPanel(userProcessContainer, enterprise, request1, ecoSystem);
        userProcessContainer.add("addVitalSignsJPanel", addVitalSignsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
       
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please select one row","Warning" , JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_addVitalSignsJButtonActionPerformed

    private void addTreatmentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTreatmentJButtonActionPerformed
        // TODO add your handling code here:
        int selectedrow = hospitalRequestsJTable.getSelectedRow();
        if (selectedrow >= 0)
        {
         ClaimApprovalRequest request1 = (ClaimApprovalRequest)hospitalRequestsJTable.getValueAt(selectedrow, 0);
            //HospitalAdminWorkAreaJPanel hospitalAdminWorkAreaJPanel = new HospitalAdminWorkAreaJPanel(userProcessContainer, enterprise,request1);
            //userProcessContainer.add("hospitalAdminWorkAreaJPanel", hospitalAdminWorkAreaJPanel);
            //CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            //layout.next(userProcessContainer);
        
        AddTreatmentJPanel addTreatmentJPanel = new AddTreatmentJPanel(userProcessContainer, enterprise, request1, ecoSystem);
        userProcessContainer.add("addTreatmentJPanel", addTreatmentJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
       
        }
        else 
        {
            JOptionPane.showMessageDialog(null, "Please select one row","Warning" , JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addTreatmentJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTreatmentJButton;
    private javax.swing.JButton addVitalSignsJButton;
    private javax.swing.JLabel hospitalAdminWorkAreaJLabel;
    private javax.swing.JTable hospitalRequestsJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
